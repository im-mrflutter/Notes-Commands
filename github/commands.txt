1 - first of all we have to show fils to git , its means we have say to git "lets know these/this file" .

to initioalise and show the files to git we have use this command :

1- open a shell/terminal/CMD in the path of file 
2- run this command : 

git init


--------

2 - to see status of git and changes on git we have use this command :

git status

its help to us to know how many fild modefide , deleted , added , tracked and untrackted .


its help us to know how to mannage file and whitch files need to add in git-box (stage)



--------

3 - after that command git will see the files and folders . if we wanna git tracks them we have add files to gits box(stage)
its means , we have give access to git . we can use it with this command :

git add -A


note : -A means All file exist in this path . if we wanna add an specific file we have use the full name of file :

git add 'text.txt'


also we can add specific #filess . for example we can add all files those are *.txt or name.*

git add '*.html' ==> every file that is html-format

git add 'index.* ==> every file that name is index



--------

4 - if we wanna take out an specific file from git-box(stage) , and when i commit changes to my branch , that file will not commit.
we can use this command :

git reset file-name

also we can take out all files from git-box(stage) with this command :

git reset


--------

5 - if we wanna back to last commit and forget the any changes we done on file , we can use this command :

git checkout -- file_name

example :

git checkout -- commands.txt

even if we modified a file and send those on stage mode , we can rest that and back to that version of before changes (last commit)


-------


6 - if we wanna see exact changes between after & before of files those are on stage mode, we can use this tool :

git diff --staged


note : compare just the changed files on stage-mode with last commit


this command show all changes files those are on stage mode , its shows changes line by line .


also we can use this tool compare the all first files(last commit) with changes files, like :

git diff HEAD


note : HEAD means last commit


-------

7 - if you wanna develop a part of a project , and also you wanna make a copy from main files and , change some thing in those 
you have to make a branch from main branch . its help you to make a copy from main files and after all chenges , merg those
with main project .


we can make a branch with this command :

git branch branch-name


if you wanna see the all branch you have run this command :

git branch


if you wanna switch between branches you have to use this command :

git branch checkout branch-name


if you wanna delete a branch you have to run this command :

git branch -d branch-name


important note : if you make a branch and change some thing or delete or add file , you have to commit that , 
if you dont you can also see the changes on another branchs .

---------
8 - so you made a new branch and add you changes in files . its time to merg changes with main files .

we can use this command :

note : we have to checkout to master and merging

git merg branch-name


git will automaticlly add changes , to files 


important note : if you make a branch and change some thing or delete or add file , you have to commit that , 
if you dont you can also see the changes on another branchs .







